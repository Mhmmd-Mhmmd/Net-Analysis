# -*- coding: utf-8 -*-
"""edge_list_to_adjacency.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bw5u5mDiEzfr_Kp1Wz98o59ij31J0HPz
"""

import numpy as np
import pandas as pd
import re

from google.colab import drive
drive.mount('/content/drive')

!unzip /content/drive/MyDrive/emails.csv.zip

df = pd.read_csv('/content/emails.csv')
df.drop(columns=['file'], inplace=True)

def prepare(in_text: str):
    txt = in_text.split('\n')
    txt = [i.strip() for i in txt if len(i) > 0]

    out = []
    index = None

    for i in txt:
        if (i[:3] == 'To:') and (i[-4:] == '.com'):
            out.append(i)
        elif (i[:5] == 'From:') and (i[-9:] == 'enron.com'):
            out.append(i)
        elif i[:11] == 'X-FileName:':
            index = txt.index(i)
    if index:
        txt = txt[index + 1:]
        txt = '\n'.join(txt)
        txt = re.sub(r'\s\s', ' ', txt)
        out.append(txt)
    return out

data = pd.DataFrame()
data['raw'] = df['message'].apply(lambda x: prepare(x))
data['len'] = data['raw'].apply(lambda x: len(x))
data['targets'] = data['raw'].apply(lambda x: [i for i in x if i[:3] == 'To:'])
data['sources'] = data['raw'].apply(lambda x: [i for i in x if i[:5] == 'From:'])
data['message'] = data['raw'].apply(lambda x: [i for i in x if ((i[:3] != 'To:') & (i[:5] != 'From:'))])
data['len_tar'] = data['targets'].apply(lambda x: len(x))
data['len_src'] = data['sources'].apply(lambda x: len(x))
data = data[data['len_tar'] != 0]
data = data[data['len_src'] != 0]
data['message'] = data['message'].apply(lambda x: str(x[0]) if len(x) > 0 else x)
data.reset_index(inplace=True)
data.drop(columns=['index'], inplace=True)
data = data.explode('targets')
data = data.explode('sources')

# data['targets'] = data['targets'].apply(lambda x: x[4:])
# data['sources'] = data['sources'].apply(lambda x: x[6:])

data.reset_index(inplace=True)

data.drop(columns=['index', 'len_tar', 'len_src', 'len'], inplace=True)

data

"""## making adjacency matrix"""

data.drop(columns=['raw'], inplace=True)

nodes = np.unique(data[['sources', 'targets']])
node_indices = dict(zip(nodes, range(len(nodes))))

adj_matrix = np.zeros(shape=(len(nodes), len(nodes)))

for i in range(len(data)):
    source_idx = node_indices[data.loc[i, 'sources']]
    target_idx = node_indices[data.loc[i, 'targets']]
    adj_matrix[source_idx][target_idx] += 1

adj_matrix_df = pd.DataFrame(data=adj_matrix,
                             index=nodes,
                             columns=nodes)
adj_matrix

for i in adj_matrix[0]:
    if i != 0:
        print(i)

test = data[['sources', 'targets']].head()

test

np.unique(data[['sources', 'targets']].head())

test.loc[5] = ['From: ashgar@enron.com', 'To: phillip.allen@enron.com']

test

np.unique(test)

adj_matrix_df

